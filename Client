#include <fstream>
#include <iostream>
#include <string>
#include <vector>
#include <sstream>
#include <thread>
#include <chrono>
using namespace std;


struct Student {
    string name;
    vector<int> grades;
};

int main() {
    setlocale(LC_ALL, "rus");

    string filename = "C:\\Users\\MaXwell\\Desktop\\f1.bin";
    string resultFile = "C:\\Users\\MaXwell\\Desktop\\f2.bin";

    while (true) {
        Student student;

        cout << "Введите имя и фамилию студента: ";
        getline(cin, student.name);
        if (student.name == "exit") break;

        cout << "Введите оценки через пробел: ";
        string input;
        getline(cin, input);

        stringstream ss(input);
        int grade;
        while (ss >> grade) {
            if (grade < 2 || grade > 5) {
                cout << "Ошибка: оценки должны быть от 2 до 5!" << endl;
                continue;
            }
            student.grades.push_back(grade);
        }

        if (student.grades.empty()) {
            cout << "Нет валидных оценок для записи!" << endl;
            continue;
        }

        ofstream file(filename, ios::binary | ios::app);
        if (!file) {
            cout << "Ошибка записи в файл!" << endl;
            return 1;
        }

        size_t nameLength = student.name.length();
        file.write(reinterpret_cast<char*>(&nameLength), sizeof(size_t));
        file.write(student.name.c_str(), nameLength);

        size_t gradesSize = student.grades.size();
        file.write(reinterpret_cast<char*>(&gradesSize), sizeof(size_t));
        file.write(reinterpret_cast<char*>(student.grades.data()), sizeof(int) * gradesSize);
        file.close();

        cout << "Данные отправлены, ждём результат..." << endl;

        string lastResult;
        while (true) {
            this_thread::sleep_for(chrono::seconds(1));

            ifstream resFile(resultFile);
            if (resFile) {
                string avg, scholarship;
                getline(resFile, avg);
                getline(resFile, scholarship);
                resFile.close();

                string currentResult = avg + "\n" + scholarship;
                if (currentResult != lastResult) {
                    cout << "Средний балл: " << avg << endl;
                    cout << "Ответ от сервера: " << scholarship << endl;
                    ofstream(resultFile, ios::trunc).close();
                    break;
                }
            }
        }
    }
    return 0;
}
