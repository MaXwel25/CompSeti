#include <winsock2.h>
#include <ws2tcpip.h>
#include <iostream>
#include <string>

#pragma comment(lib, "ws2_32.lib")

using namespace std;

const int BUFFER_SIZE = 1024;
const char* SERVER_IP = "127.0.0.1";
const u_short PORT = 12345;

int main() {
    setlocale(LC_ALL, "ru");
    WSADATA wsaData;
    if (WSAStartup(MAKEWORD(2, 2), &wsaData) != 0) {
        cerr << "Ошибка инициализации Winsock: " << WSAGetLastError() << endl;
        return 1;
    }

    SOCKET clientSocket = socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP);
    if (clientSocket == INVALID_SOCKET) {
        cerr << "Ошибка создания сокета: " << WSAGetLastError() << endl;
        WSACleanup();
        return 1;
    }

    sockaddr_in serverAddr;
    serverAddr.sin_family = AF_INET;
    serverAddr.sin_port = htons(PORT);
    inet_pton(AF_INET, SERVER_IP, &serverAddr.sin_addr);

    char buffer[BUFFER_SIZE];
    int serverAddrSize = sizeof(serverAddr);

    cout << "UDP Эхо-Клиент запущен" << endl;
    cout << "Подключение к серверу " << SERVER_IP << ":" << PORT << endl;

    while (true) {
        cout << "Введите сообщение (или 'exit' для завершения): ";
        string message;
        getline(cin, message);
        if (message == "exit") break;

        sendto(clientSocket, message.c_str(), message.size(), 0, (sockaddr*)&serverAddr, serverAddrSize);

        int bytesReceived = recvfrom(clientSocket, buffer, BUFFER_SIZE, 0, (sockaddr*)&serverAddr, &serverAddrSize);

        if (bytesReceived > 0) {
            cout << "Эхо-ответ сервера: " << string(buffer, bytesReceived) << endl;
        }
        else {
            cerr << "Ошибка при получении ответа" << endl;
        }
    }

    closesocket(clientSocket);
    WSACleanup();
    return 0;
}